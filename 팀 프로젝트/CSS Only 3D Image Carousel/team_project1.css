/* author: https://codepen.io/NiklasKnaack/pen/abrOMLY
Niklas Knaack
 */





/*
vars
*/
:root {
    --carousel-transition-duration: 250ms;
    --carousel-transition-ease: ease-out;
    --carousel-bg-color-rgb: 0, 0, 0;
    --carousel-shadow-color-rgb: 128, 128, 128;
    --carousel-item-width: 11.5rem;
    --carousel-item-height: 17.5rem;
    --carousel-item-hover-effect: 1.075;
    --carousel-item-reflection-blur: 0.25rem;
    --carousel-item-empty-color-rgb: 255, 255, 255;
    --carousel-item-glow-color-rgb: 255, 255, 255;
    --carousel-item-glow-size: 5rem;
    --carousel-diameter: 50rem;
    --carousel-3d-perspective: 1000px;
    --carousel-3d-perspective-origin: 50% 20%;
    --carousel-control-button-width: 1.25rem;
    --carousel-control-button-height: 4rem;
    --carousel-control-color-rgb: 255, 255, 255;
    --carousel-animation-duration: 25s;
    --carousel-animation-play-state: running;
    --carousel-direction-animation-play-state: paused;
}

/*
global
*/
*, *::before, *::after {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
}

*:focus {
    outline: none;
}

a {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.body-1 {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 80vh;
    background-color: rgb(var(--carousel-bg-color-rgb));
    overflow: hidden;
}

/*
carousel
*/
.carousel1 {
    --_diameter: var(--carousel-diameter);
    --_radius: calc(var(--_diameter) / 2);
    --_item-width: var(--carousel-item-width);
    --_item-height: var(--carousel-item-height);
    perspective: var(--carousel-3d-perspective);
    perspective-origin: var(--carousel-3d-perspective-origin);
    width: var(--_diameter);
    height: var(--_diameter);
}

@media only screen and (max-width: 48rem) {
    .carousel1 {
            --_diameter: calc(var(--carousel-diameter) * 0.75);
            --_item-width: calc(var(--carousel-item-width) * 0.75);
            --_item-height: calc(var(--carousel-item-height) * 0.75);
    }
}

@media only screen and (max-width: 32rem) {
    .carousel1 {
            --_diameter: calc(var(--carousel-diameter) * 0.6);
            --_item-width: calc(var(--carousel-item-width) * 0.6);
            --_item-height: calc(var(--carousel-item-height) * 0.6);
    }
}

@media only screen and (max-width: 16rem) {
    .carousel1 {
            --_diameter: calc(var(--carousel-diameter) * 0.25);
            --_item-width: calc(var(--carousel-item-width) * 0.25);
            --_item-height: calc(var(--carousel-item-height) * 0.25);
    }
}

.carousel1 .carousel-control-button {
    --_width: var(--carousel-control-button-width);
    --_height: var(--carousel-control-button-height);
    z-index: 1;
    width: var(--_width);
    height: var(--_height);
    background-color: rgb(var(--carousel-control-color-rgb));
    opacity: 0.2;
    transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
    position: absolute;
}
.carousel1 .carousel-control-button:hover {
    opacity: 0.4;
}
.carousel1 .carousel-control-button:has(input:checked) {
    opacity: 0.8;
}

.carousel1 .carousel-control-button input {
    -webkit-appearance: none;
    appearance: none;
    opacity: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
}

.carousel1 .carousel-control-button.left {
    clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
    top: calc(var(--_radius) - var(--_height) / 2);
    left: 0;
}
.carousel1:has(.carousel-control-button.left input:checked) {
    --carousel-direction-animation-play-state: running;
}

.carousel1 .carousel-control-button.right {
    clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
    top: calc(var(--_radius) - var(--_height) / 2);
    right: 0;
}
.carousel1:has(.carousel-control-button.right input:checked) {
    --carousel-direction-animation-play-state: paused;
}

.carousel1 .carousel-rotation-direction {
    --_direction-animation-play-state: var(--carousel-direction-animation-play-state);
    --_z: calc(var(--_radius) * -1);
    transform: translateZ(var(--_z));
    transform-style: preserve-3d;
    animation: carousel-rotation-reverse calc(var(--carousel-animation-duration) / 2) reverse linear infinite var(--_direction-animation-play-state);
    transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
}

@keyframes carousel-rotation-reverse {
    from {transform: translateZ(var(--_z)) rotateY(0deg);}
    to {transform: translateZ(var(--_z)) rotateY(360deg);}
}

@keyframes carousel-rotation-normal {
    from {transform: rotateY(0deg);}
    to {transform: rotateY(360deg);}
}

.carousel1 .carousel-item-wrapper {
    transform-style: inherit;
    width: inherit;
    height: inherit;
    list-style-type: none;
    position: relative;
    animation: carousel-rotation-normal var(--carousel-animation-duration) normal linear infinite var(--carousel-animation-play-state);
    transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
}

.carousel1 .carousel-rotation-direction:has(.carousel-item1:hover) {
    --carousel-animation-play-state: paused;
    --_direction-animation-play-state: paused;
}

.carousel1 .carousel-item1 {
    --_width: var(--_item-width);
    --_height: var(--_item-height);
    --_rotation: calc(360 / var(--_num-elements) * var(--_index) * 1deg);
    left: calc(var(--_radius) - var(--_item-width) / 2);
    top: calc(var(--_radius) - var(--_item-height) / 2);
    transform: rotateY(var(--_rotation)) translateZ(var(--_radius));
    transform-style: inherit;
    width: var(--_width);
    height: var(--_height);
    transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
    box-shadow: 0 0 var(--carousel-item-glow-size) transparent;
    position: absolute;
}

.carousel1 .carousel-item1:hover {
    box-shadow: 0 0 var(--carousel-item-glow-size) rgb(var(--carousel-item-glow-color-rgb));
    transform: rotateY(var(--_rotation)) translateZ(calc(var(--_radius) * var(--carousel-item-hover-effect)));
}

.carousel1 .carousel-item1 a {
    display: block;
    width: inherit;
    height: inherit;
    text-indent: -9999px;
    background-color: rgba(var(--carousel-item-empty-color-rgb), 0.5);
    background-image: var(--_image-url);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    transition: filter var(--carousel-transition-duration) var(--carousel-transition-ease);
    filter: grayscale(100%);
}

.carousel1 .carousel-item1:hover a {
    filter: grayscale(0%);
}

.carousel1 .carousel-item1::before {
    content: '';
    width: inherit;
    height: inherit;
    background-color: rgba(var(--carousel-item-empty-color-rgb), 0.5);
    background-image: 
            linear-gradient(to top, rgba(var(--carousel-bg-color-rgb), 0.25) 0%, rgba(var(--carousel-bg-color-rgb), 1.0) 75%), 
            var(--_image-url);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    pointer-events: none;
    filter: blur(var(--carousel-item-reflection-blur)) grayscale(100%);
    transition: filter var(--carousel-transition-duration) var(--carousel-transition-ease);
    transform-style: inherit;
    transform-origin: center bottom;
    transform: rotateX(90deg) rotateZ(180deg) rotateY(180deg);
    position: absolute;
}

.carousel1 .carousel-item1:hover::before {
    filter: blur(var(--carousel-item-reflection-blur)) grayscale(0%);
}

.carousel1 .carousel-ground {
    --_width: var(--_diameter);
    --_height: var(--_diameter);
    --_rotation: 90deg;
    left: calc(var(--_radius) - var(--_width) / 2);
    top: calc(var(--_radius) - var(--_height) / 2);
    transform: rotateX(var(--_rotation)) translateZ(calc(var(--_item-height) / -2));
    width: var(--_width);
    height: var(--_height);
    border-radius: 50%;
    background: radial-gradient(rgba(var(--carousel-shadow-color-rgb), 0.75) 15% , rgba(var(--carousel-bg-color-rgb), 0) 60%);
    opacity: 0.5;
    transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
    position: absolute;
}

.carousel1 .carousel-item-wrapper:has(.carousel-item1:hover) .carousel-ground {
    opacity: 0.75;
}

/*여기까지가 이제 캐러셀*/

:root {
    --background-dark: #2d3548;
    --text-light: rgba(255, 255, 255, 0.6);
    --text-lighter: rgba(255, 255, 255, 0.9);
    --spacing-s: 8px;
    --spacing-m: 16px;
    --spacing-l: 24px;
    --spacing-xl: 32px;
    --spacing-xxl: 64px;
    --width-container: 1200px;
  }
  
  * {
    border: 0;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  html {
    height: 100%;
    font-family: "Montserrat", sans-serif;
    font-size: 14px;
  }
  
  body {
    height: 100%;
    background-color: #000;
  }
  
  .hero-section {
    align-items: flex-start;
    display: flex;
    min-height: 100%;
    justify-content: center;
    padding: var(--spacing-xxl) var(--spacing-l);
  }
  
  .card-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-column-gap: var(--spacing-l);
    grid-row-gap: var(--spacing-l);
    max-width: var(--width-container);
    width: 100%;
  }
  
  @media (min-width: 540px) {
    .card-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 960px) {
    .card-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  
  .card {
    list-style: none;
    position: relative;
  }
  
  .card:before {
    content: "";
    display: block;
    padding-bottom: 150%;
    width: 100%;
  }
  
  .card__background {
    background-size: cover;
    background-position: center;
    border-radius: var(--spacing-l);
    bottom: 0;
    filter: brightness(0.75) saturate(1.2) contrast(0.85);
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    transform-origin: center;
    trsnsform: scale(1) translateZ(0);
    transition: filter 200ms linear, transform 200ms linear;
  }
  
  .card:hover .card__background {
    transform: scale(1.05) translateZ(0);
  }
  
  .card-grid:hover > .card:not(:hover) .card__background {
    filter: brightness(0.5) saturate(0) contrast(1.2) blur(20px);
  }
  
  .card__content {
    left: 0;
    padding: var(--spacing-l);
    position: absolute;
    top: 0;
  }
  
  .card__category {
    color: var(--text-light);
    font-size: 0.9rem;
    margin-bottom: var(--spacing-s);
    text-transform: uppercase;
  }
  
  .card__heading {
    color: var(--text-lighter);
    font-size: 1.9rem;
    text-shadow: 2px 2px 20px rgba(0, 0, 0, 0.2);
    line-height: 1.4;
    word-spacing: 100vw;
  }

/*여기까지가 이제 카드*/

/*여기까지가 이제 캐러셀*/

.nav-font {
    color: white;
}

.nav-logo {
    width: 90px;
    height: 30px;
}
.navbar-0 {
    color: white;
}

.navbar-1 {
    background: black;
    height: 2px;
    width: 100%;
    text-align: center;
    line-height: 50px;
    font-size: 1rem;
    color: white;
    margin-top: auto;
    font-size: 50px;
    padding-top: 100px;
    font-weight: 900;
}

.main-1 {
    background: white;
    height: 500px;
    width: 100%;
    text-align: center;
    line-height: 50px;
    font-size: 1rem;
    color: black;
    margin-top: auto;
}

.footer {
    background: rgba(3, 7, 17, 0.65);
    height: 500px;
    width: 100%;
    text-align: center;
    line-height: 50px;
    font-size: 1rem;
    color: white;
    margin-top: auto;
}

